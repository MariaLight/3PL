"use strict";document.addEventListener("DOMContentLoaded",(function(){try{var e=function(e){e.classList.remove("modal--active"),r.style.overflowY="",function(e){e.removeEventListener("keydown",t),e.removeEventListener("click",n)}(e)},t=function(t){var n=t.currentTarget;"Escape"===t.key&&e(n)},n=function(t){t.currentTarget.querySelector(".modal__content").contains(t.target)||e(t.currentTarget)},a=document.querySelectorAll("[data-modal]"),r=document.querySelector("body"),c=document.querySelectorAll("[data-modal-close]");a.forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault();var a=e.target.closest("[data-modal]").getAttribute("data-modal"),c=document.getElementById(a);c&&(c.classList.add("modal--active"),r.style.overflow="hidden",function(e){e.addEventListener("keydown",t),e.addEventListener("click",n)}(c))}))})),c.forEach((function(t){t.addEventListener("click",(function(t){var n=t.target.closest(".modal");n&&e(n)}))}))}catch(e){}[].forEach.call(document.querySelectorAll(".tel"),(function(e){var t;function n(e){e.keyCode&&(t=e.keyCode),this.selectionStart<3&&e.preventDefault();var n="+7 (___) ___ ____",a=0,r=(n.replace(/\D/g,""),this.value.replace(/\D/g,"")),c=n.replace(/[_\d]/g,(function(e){return a<r.length?r.charAt(a++):e}));-1!=(a=c.indexOf("_"))&&(a<5&&(a=3),c=c.slice(0,a));var l=n.substr(0,this.value.length).replace(/_+/g,(function(e){return"\\d{1,"+e.length+"}"})).replace(/[+()]/g,"\\$&");(!(l=new RegExp("^"+l+"$")).test(this.value)||this.value.length<5||t>47&&t<58)&&(this.value=c),"blur"==e.type&&this.value.length<5&&(this.value="")}e.addEventListener("input",n,!1),e.addEventListener("focus",n,!1),e.addEventListener("blur",n,!1),e.addEventListener("keydown",n,!1)}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
